services:
  # MySQL
  mysql:
    image: mysql:8.0.37
    container_name: mysql
    command:
      - --default-authentication-plugin=caching_sha2_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --range_optimizer_max_mem_size=16777216
    restart: always
    env_file:
      - ./mysql/.env
    volumes:
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d
      - ./mysql/db:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - local-network

  # Redis
  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/db:/data
      - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
    restart: always
    networks:
      - local-network

  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    env_file:
      - ./mongodb/.env
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb/db:/data/db
    restart: always
    networks:
      - local-network

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    container_name: elasticsearch
    env_file:
      - ./elasticsearch/.env
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    restart: always
    networks:
      - local-network

  # Logstash
  logstash:
    build:
      context: ./logstash
      dockerfile: Dockerfile
    image: logstash-custom:8.8.2
    container_name: logstash
    env_file:
      - ./logstash/.env
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./logstash/drivers:/usr/share/logstash/drivers
      - ./logstash/state:/usr/share/logstash/data
    ports:
      - "5044:5044"
      - "9600:9600"
    depends_on:
      - elasticsearch
    restart: always
    networks:
      - local-network

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.2
    container_name: kibana
    env_file:
      - ./kibana/.env
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    restart: always
    networks:
      - local-network

networks:
  local-network:
    driver: bridge
